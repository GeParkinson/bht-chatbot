/*
 * Copyright 2010 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package de.bht.chatbot.drools

import java.util.List
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;

import java.time.LocalDate;

import de.bht.chatbot.canteen.model.Dish
import de.bht.chatbot.canteen.model.DishType;
import de.bht.chatbot.message.Intent;
import de.bht.chatbot.message.EntityName;
import de.bht.chatbot.drools.model.DroolsMessage

global de.bht.chatbot.canteen.model.CanteenData canteenData;

rule "Test Rule"
    dialect "java"
    when
        m : DroolsMessage( intent == "Test")
    then
        modify ( m ) { setText("Test successful" )};
end

rule "Greeting"
    dialect "java"
    when
        m : DroolsMessage( intent.equals(Intent.GREETING.getText()))
    then
        modify ( m ) { setText("Hallo")};
end

rule "Saying goodbye"
    dialect "java"
    when
        m : DroolsMessage( intent.equals(Intent.SAYING_GOODBYE.getText()))
    then
        modify( m ) { setText("Tsch√ºss")};
end

rule "Show all dishes"
    dialect "java"
    when
        m : DroolsMessage( intent.equals(Intent.SHOW_FOOD.getText()) && entities.isEmpty())
    then
        modify ( m ) { setText("Heute gibt es folgende Gerichte: \n" + canteenData.getDishes())};
end

rule "Show dishes"
    dialect "java"
    when
        m : DroolsMessage( intent.equals(Intent.SHOW_FOOD.getText()) && !entities.isEmpty() )
    then
        modify( m ) {
            setText("Gerichte:\n" + canteenData.getDishesFiltered(
            (m.getEntities().containsKey(de.bht.chatbot.message.EntityName.DATE.getText()) ? m.getEntities().get(de.bht.chatbot.message.EntityName.DATE.getText()) : null),
            (m.getEntities().containsKey(de.bht.chatbot.message.EntityName.HEALTHY.getText()) ? m.getEntities().get(de.bht.chatbot.message.EntityName.HEALTHY.getText()) : null),
            (m.getEntities().containsKey(de.bht.chatbot.message.EntityName.DISH_TYPE.getText()) ? m.getEntities().get(de.bht.chatbot.message.EntityName.DISH_TYPE.getText()) : null),
            (m.getEntities().containsKey(de.bht.chatbot.message.EntityName.INGREDIENTS.getText()) ? m.getEntities().get(de.bht.chatbot.message.EntityName.INGREDIENTS.getText()) : null)
            ))
        };
end
